package de.di.erp.gui;

import de.di.erp.gui.Config.Property;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JTabbedPane;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 * The application's main frame.
 */
public class ERPGUIView extends FrameView implements ConfigChangeListener {

    private String[] tabs = null;
    private Config config = null;
    private boolean tabsActive = false;
    private java.util.ArrayList<ConfigTab> configTabs = null;
    private boolean expertMode = false;

    public ERPGUIView(SingleFrameApplication app) {
        super(app);
        config = ERPGUIApp.getApplication().getConfig();
        initComponents();
        ResourceMap resourceMap = getResourceMap();
        String tabString = resourceMap.getString("tabbedPane.tabs");
        if (tabString != null) {
            tabs = tabString.split(",");
        }
        addTabs();
        config.addConfigChangeListener(this);

    }

    private void addExpertTab() {
        ConfigTab tab = new ExpertTab();
        tab.setConfig(config);
        configTabs.add(tab);
        JPanel panel = tab.getJPanel();
        panel.setAutoscrolls(false);
        panel.setPreferredSize(jTabbedPane1.getPreferredSize());
        panel.setMinimumSize(jTabbedPane1.getPreferredSize());
        ImageIcon icon = this.getResourceMap().getImageIcon("tab.icon");
        String title = "<html><font color=\"00307B\">" + tab.getTitle() + "</font></html>";
        this.jTabbedPane1.addTab(title, icon, panel);
    }

    private void addTabs() {
        if (tabs == null) {
            return;
        }

        configTabs = new ArrayList<ConfigTab>(tabs.length);

        ImageIcon icon = this.getResourceMap().getImageIcon("tab.icon");
        for (String tabName : tabs) {
            try {
                ConfigTab tab = (ConfigTab) Class.forName(tabName).newInstance();
                tab.setConfig(config);
                configTabs.add(tab);
                JPanel panel = tab.getJPanel();
                panel.setAutoscrolls(false);
                panel.setPreferredSize(jTabbedPane1.getPreferredSize());
                panel.setMinimumSize(jTabbedPane1.getPreferredSize());
                String title = "<html><font color=\"00307B\">" + tab.getTitle() + "</font></html>";
                this.jTabbedPane1.addTab(title, icon, panel);

            } catch (Exception ex) {
                //ex.printStackTrace();
            }
        }
        this.jTabbedPane1.setTabPlacement(JTabbedPane.TOP);
        tabsActive = true;
        this.jTabbedPane1.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(ChangeEvent e) {
                if (jTabbedPane1.getSelectedIndex() == 2){
                    try {
                        ((LicenseTab)jTabbedPane1.getSelectedComponent()).addClients();
                    } catch (IOException ex) {
                        System.out.println(ex);
                    }
                }
               
            }
        });
        jScrollPane1.getViewport().validate();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        saveButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        mainPanel.setAutoscrolls(true);
        mainPanel.setMaximumSize(new java.awt.Dimension(825, 715));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(ERPGUIView.class);
        jLabel1.setIcon(resourceMap.getIcon("logo.icon")); // NOI18N
        jLabel1.setText(resourceMap.getString("logo.text")); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setName("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        mainPanel.add(jLabel1, gridBagConstraints);

        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setMinimumSize(null);
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(790, 560));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(790, 560));
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(790, 560));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });
        jTabbedPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTabbedPane1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTabbedPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 30;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        mainPanel.add(jScrollPane1, gridBagConstraints);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(ERPGUIView.class, this);
        saveButton.setAction(actionMap.get("saveAction")); // NOI18N
        saveButton.setName("saveButton"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 40, 15, 0);
        mainPanel.add(saveButton, gridBagConstraints);

        exitButton.setAction(actionMap.get("quit")); // NOI18N
        exitButton.setName("exitButton"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 15, 0);
        mainPanel.add(exitButton, gridBagConstraints);

        setComponent(mainPanel);
    }// </editor-fold>//GEN-END:initComponents

private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
    if (!tabsActive) {
        return;
    }

    int i = jTabbedPane1.getSelectedIndex();

    if (i >= 0 && i < configTabs.size()) {
        configTabs.get(i).setConfig(config);
    }

}//GEN-LAST:event_jTabbedPane1StateChanged

private void jTabbedPane1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTabbedPane1KeyPressed
    if (evt.isControlDown() && evt.isShiftDown() && evt.getKeyCode() == KeyEvent.VK_M) {
        if (expertMode) {
            removeExpertTab();
            expertMode = false;
        } else {
            addExpertTab();
            expertMode = true;
        }
    }
}//GEN-LAST:event_jTabbedPane1KeyPressed

private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
    if (evt.isControlDown() && evt.getButton() == MouseEvent.BUTTON1) {
        if (expertMode) {
            removeExpertTab();
            expertMode = false;
        } else {
            addExpertTab();
            expertMode = true;
        }
    }
}//GEN-LAST:event_jTabbedPane1MouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
    //private JDialog aboutBox;

    @Override
    public void configChange(ConfigChangeEvent event) {
        saveButton.setEnabled(true);
    }

    @Action
    public void saveAction() {
        ResourceBundle bundle = ResourceBundle.getBundle("de/di/erp/gui/resources/ERPGUIView");
        try {
            if (config.getProperty(Property.DirectoriesBackup) == null) {
                throw new Exception(bundle.getString("backupDirectoryError.text"));
            }
            if (config.getProperty(Property.DirectoriesInput) == null) {
                throw new Exception(bundle.getString("inputDirectoryError.text"));
            }
            if (config.getProperty(Property.DirectoriesOutput) == null) {
                throw new Exception(bundle.getString("outputDirectoryError.text"));
            }
            if (config.getProperty(Property.DirectoriesLogging) == null) {
                throw new Exception(bundle.getString("loggingDirectoryError.text"));
            }
            if (config.getProperty(Property.DirectoriesErrorOutput) == null) {
                throw new Exception(bundle.getString("errorOutputDirectoryError.text"));
            }
            if (config.getProperty(Property.DirectoriesTemplate) == null) {
                throw new Exception(bundle.getString("templateDirectoryError.text"));
            }
            if (config.getProperty(Property.DirectoriesWorking) == null) {
                throw new Exception(bundle.getString("workDirectoryError.text"));
            }
            saveButton.setEnabled(false);
            ERPGUIApp.getApplication().saveConfig();
            JOptionPane.showMessageDialog(this.getComponent(), bundle.getString("warning.restart"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this.getComponent(), e.getMessage(), bundle.getString("errorDialogTitle.text"),
                    JOptionPane.ERROR_MESSAGE);
            saveButton.setEnabled(true);
        }
    }

    private void removeExpertTab() {
        ConfigTab tab = configTabs.get(configTabs.size() - 1);
        jTabbedPane1.remove(tab.getJPanel());
        configTabs.remove(tab);
    }
}
